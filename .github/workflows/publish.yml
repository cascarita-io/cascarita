name: üê≥ Publish Docker Images to ECR
on:
  # Trigger manually via GitHub UI button
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (e.g., staging, production)"
        default: "staging"
        required: true
  pull_request:
    types: [closed]
    branches:
      - main
jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Prepare server build
        run: |
          cd server
          npm install
          node create-env.js staging
          cd ..

      - name: Prepare client build
        run: |
          cd client
          pnpm install
          node create-env.cjs staging
          cd ..

      - name: Set up QEMU (for cross-platform builds)
        uses: docker/setup-qemu-action@v3

      - name: setup docker buildx
        uses: docker/setup-buildx-action@v3

      - name: docker compose build
        run: docker compose build

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: tag and push images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_SERVER_REPOSITORY: ${{ secrets.SERVER_REPO_NAME }}
          ECR_CLIENT_REPOSITORY: ${{ secrets.CLIENT_REPO_NAME }}
        run: |
          docker tag cascarita-server:latest ${{ env.ECR_REGISTRY }}/${{ env.ECR_SERVER_REPOSITORY }}:latest
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_SERVER_REPOSITORY }}:latest

          docker tag cascarita-client:latest ${{ env.ECR_REGISTRY }}/${{ env.ECR_CLIENT_REPOSITORY }}:latest
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_CLIENT_REPOSITORY }}:latest

      - name: list docker images
        run: docker images
